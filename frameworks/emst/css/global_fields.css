/* Global fields that can be appended or prepended to 
    using the -oxy-ap(pre)pend-content CSS property
*/

@namespace xml url('http://www.w3.org/XML/1998/namespace');

/* Labels */
*:before {
    font-weight:bold;
    padding-left:1px;
    padding-top:1px;
    padding-bottom:1px;
    padding-right:10px;
}

teiHeader date,
birth,
death {
    border:1px inset grey;
    margin:2px 0px;
    font-size:small;
    font-weight:normal;
    content:
        oxy_label(
            text, "When: "
            styles, "@import 'date_labels.css';"
        )
        oxy_textfield(
            edit, "@when"
            columns, 9
        )
        oxy_label(
            text, "From: "
            styles, "@import 'date_labels.css';"
        )
        oxy_textfield(
            edit, "@from"
            columns, 9
        )
        oxy_label(
            text, "To: "
            styles, "@import 'date_labels.css';"
        )
        oxy_textfield(
            edit, "@to"
            columns, 9
        )
        "\A"
        oxy_label(
            text, "Not Before: "
            width, 130px
            styles, "@import 'date_labels.css';"
        )
        oxy_textfield(
            edit, "@notBefore"
            columns, 9
        )
        oxy_label(
            text, "Not After: "
            styles, "@import 'date_labels.css';"
        )
        oxy_textfield(
            edit, "@notAfter"
            columns, 9
        )
        oxy_label(
            text, "Certainty: "
            styles, "@import 'date_labels.css';"
        )
        oxy_combobox(
            edit, "@cert"
            editable, false
            columns, 8
        );
}

placeName:before {
    content:
        oxy_label(
            text, "Place:"
            styles, "@import 'labels.css';"
        );
}

/* Facsimile & Media */

facsimile:before {
    content: "Facsimile:"
}

facsimile {
    display: block;
/*    vertical-align:middle;*/
/*    -oxy-folded:true;*/
    -oxy-foldable:true;
    content: 
        oxy_urlChooser(
            edit, "@xml:base"
        );
}

graphic,
media {
    font-weight:normal;
    display:list-item;
    list-style-type:decimal;
    margin-left:35px;
    content:
        oxy_button(
            actionID, "launch.media"
            transparent, true
            showText, true
            showIcon, true
        )
        oxy_label(
            text, "ID: "
            width, 15px
            styles, "@import 'sub_labels.css';"            
        )
        oxy_textfield(
            edit, "@xml:id"
            columns, 10
        )
        oxy_label(
            text, "File: "
            width, 35px
            styles, "@import 'sub_labels.css';"            
        )
        oxy_urlChooser(
            edit, "@url"
        )
        oxy_label(
            text, "Type: "
            styles, "@import 'sub_labels.css';"            
        )
        oxy_popup(
            edit, "@mimeType", 
            values, "application/pdf, image/jpeg, application/xml"
            labels, "pdf, jpeg, xml"
            selectionMode, single
        )
    ;
}

/* Inline elements for text */

hi[rend="bold"] {
  font-weight:bold;
}

hi[rend="italic"] {
  font-style:italic;
}

hi[rend="superscript"] {
    font-size:small;
    vertical-align:super;
}

hi[rend="subscript"] {
    font-size:small;
    vertical-align:sub;
}

hi[rend="underline"] {
  text-decoration:underline;
}

abbr {
  display: inline;
  font-weight:bold;
}

expan {
    font-style:italic;
}

add {
  color: green;
  background-color: inherit;
  text-decoration: underline;
  font-size:small;
  vertical-align: oxy_xpath("if (@place eq 'above') then 'super' else if (@place eq 'below') then 'sub' else 'middle'");
}

del {
  color: red;
  background-color: inherit;
  text-decoration: line-through;
}

gap {
    color:blue;
    content: "[...]";
    font-style: italic;
}

unclear {
  color: maroon;
  font-style: italic;
}

foreign {
    font-style:italic;
}

note:before {
    font-size:smaller;
    padding-right:5px;
    font-weight:bold;
    content: "Note:";
}

note {
    border: 1px solid maroon;
    font-size: 11px;
}

/* Page and Line Breaks */
lb:first-of-type {
    content:"";
}

lb {
    -oxy-display-tags:none;
    content:"\A";
}

pb {
    -oxy-display-tags:none;
    display:block;
    background-color:transparent;
    border-style:groove none;
    vertical-align:middle;
    padding:5px;
    margin:10px 0px;
    border-width:1px 0px;
    font-weight:bold;
    font-size:small;
    line-height:1.5;
    counter-increment:pages;
    content:
        "Page " counter(pages) "       "
        oxy_label(
            text, "Image(s):"
            width, 75px
            styles, "@import 'labels.css';"
        )
        oxy_popup(
            edit, "@facs"
            fontInherit, true
            values, oxy_xpath("string-join(for $id in (//graphic/@xml:id | //media/@xml:id) return concat('#', $id), ',')")
            labels, oxy_xpath("string-join((//graphic/@url | //media/@url), ',')")
            selectionMode, multiple
        )
        oxy_button(
            actionID, "launch.media.by.ref"
            transparent, true
            showText, true
            showIcon, true
        )
        "     n: "
        oxy_textfield(
            edit, "@n"
            columns, 5
            fontInherit, true
            tooltips, "Any page number provided by the source"
        )
    ;
}

/* An attempt at numbering linebreaks...
text p lb{
    font-family:courier, fixed, monospace;
    font-size:x-small;
    content:
        oxy_xpath(
            "if (((count(./preceding::lb intersect ./preceding::pb[1]/following::lb) + 1) mod 5) eq 0) then concat('\A', substring(concat(count(./preceding::lb intersect ./preceding::pb[1]/following::lb) + 1, '     '), 1,4)) else if ((count(./preceding::lb intersect ./preceding::pb[1]/following::lb) + 1) eq 1) then '    ' else '\A     '"
        )
    ;
}*/

/*w {
    background-color:transparent;
    border-style:groove none;
    border-width:1px 0px;
    font-weight:bold;
    font-size:small;
    line-height:2;
    content:
        oxy_popup(
            edit, "@ana"
            fontInherit, true
            values, oxy_xpath("string-join(for $id in //interpGrp[@type eq 'pos']/interp/@xml:id return concat('#', $id), ',')")
            labels, oxy_xpath("string-join(//interpGrp[@type eq 'pos']/interp/text(), ',')")
            selectionMode, single
        );
}*/